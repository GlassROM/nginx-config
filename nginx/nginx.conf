worker_processes auto;
worker_rlimit_nofile 16384;

events {
    worker_connections 4096;
}

http {
    include mime.types;
    default_type application/octet-stream;

    charset utf-8;

    sendfile on;
    sendfile_max_chunk 512k;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 4m;
    types_hash_max_size 4096;
    server_tokens off;
    msie_padding off;

    client_max_body_size 1M;
    client_body_buffer_size 1k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    http2_recv_buffer_size 128k;

    client_body_timeout 30s;
    client_header_timeout 30s;
    send_timeout 30s;

    http2_max_concurrent_streams 64;
    limit_conn_status 429;
    limit_conn_zone $binary_remote_addr zone=addr:10m;
    limit_conn addr 256;

    ssl_protocols TLSv1.3 TLSv1.2;
    ssl_ciphers ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256;
    ssl_prefer_server_ciphers on;
#    ssl_conf_command Options PrioritizeChaCha;
#    ssl_conf_command Ciphersuites TLS_CHACHA20_POLY1305_SHA256:TLS_AES_256_GCM_SHA384:TLS_AES_128_GCM_SHA256;
#    ssl_ecdh_curve x25519:secp384r1:secp256r1;

    ssl_certificate /etc/letsencrypt/live/glassrom.pw/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/glassrom.pw/privkey.pem;

    ssl_session_cache shared:SSL:60m;
    ssl_session_timeout 1d;

    # maintained by nginx-rotate-session-ticket-keys in ramfs
    ssl_session_ticket_key session-ticket-keys/4.key;
    ssl_session_ticket_key session-ticket-keys/3.key;
    ssl_session_ticket_key session-ticket-keys/2.key;
    ssl_session_ticket_key session-ticket-keys/1.key;

    ssl_early_data on;

    ssl_buffer_size 4k;

# /etc/mkinitcpio.conf
#    ssl_conf_command Options KTLS;

    ssl_trusted_certificate /etc/letsencrypt/live/glassrom.pw/chain.pem;
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_stapling_file /etc/letsencrypt/ocsp-cache/glassrom.pw/ocsp.der;

    log_format main '$remote_addr - $remote_user [$time_local] '
        '"$request_method $scheme://$host$request_uri $server_protocol" $status $body_bytes_sent '
        '"$http_referer" "$http_user_agent"';
    access_log /var/log/nginx/access.log main buffer=64k flush=1m;
    error_log syslog:server=unix:/dev/log,nohostname;
    log_not_found off;

    gzip_proxied any;
    gzip_vary on;

    if_modified_since before;

    aio threads;

    # Set in-memory cache-metadata size in keys_zone, size of video caching and how many days a cached object should persist
    proxy_cache_path /var/cache/nginx/jellyfin-videos levels=1:2 keys_zone=jellyfin-videos:100m inactive=90d max_size=10G;
    map $request_uri $h264Level {
        ~(h264-level=)(.+?)& $2;
    }
    map $request_uri $h264Profile {
        ~(h264-profile=)(.+?)& $2;
    }

    proxy_cache_path /var/cache/nginx/jellyfin levels=1:2 keys_zone=jellyfin:100m max_size=1g inactive=30d use_temp_path=off;

    server {
        listen 80 backlog=4096;
        listen [::]:80 backlog=4096;
        server_name glassrom.org www.glassrom.org glassrom.pw www.glassrom.pw jellyfin.glassrom.pw jellyfin.glassrom.org tr.glassrom.pw tr.glassrom.org adguardcontrol.glassrom.org adguardcontrol.glassrom.pw enterpriseconnect.glassrom.org enterpriseconnect.glassrom.pw;

        root /var/empty;

        location = /.well-known/security.txt {
            root /srv/security;
            include /etc/nginx/snippets/security-headers.conf;
        }

        # use $host to set up HSTS for redirect domains
        return 308 https://$host$request_uri;
    }

    server {
        listen 443 ssl http2 backlog=4096 fastopen=256 bind reuseport;
        listen [::]:443 ssl http2 backlog=4096 fastopen=256 bind reuseport;
        listen 443 http3;
        listen [::]:443 http3;
        server_name www.glassrom.org glassrom.pw www.glassrom.pw;

        root /var/empty;

        include /etc/nginx/snippets/security-headers.conf;

        location = /.well-known/security.txt {
            root /srv/security;
            include /etc/nginx/snippets/security-headers.conf;
            include /etc/nginx/snippets/0rtt-replay-protect.conf;
        }

        return 308 https://glassrom.org$request_uri;
    }

    upstream doh {
        server [::1]:8053;
        keepalive 256;
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        listen 443 http3 bind reuseport;
        listen [::]:443 http3 bind reuseport;
        server_name glassrom.org;

        root /srv/http;
        autoindex on;

        location / {
            include /etc/nginx/snippets/basicauth.conf;
        }

        location = /.well-known/security.txt {
            root /srv/security;
            include /etc/nginx/snippets/security-headers.conf;
            include /etc/nginx/snippets/0rtt-replay-protect.conf;
        }

        location = /dns-query {
            include /etc/nginx/snippets/0rtt-replay-protect.conf;
            include /etc/nginx/snippets/global-proxy-headers.conf;
            proxy_pass https://doh;
            proxy_ssl_verify_depth 1;
            proxy_ssl_trusted_certificate /etc/nginx/ag.cer;
            proxy_ssl_name adguardintsrv;

            include /etc/nginx/snippets/security-headers.conf;
        }

        include /etc/nginx/snippets/security-headers.conf;
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        listen 443 http3;
        listen [::]:443 http3;
        server_name adguardcontrol.glassrom.org;

        root /var/empty;

        location = /.well-known/security.txt {
            root /srv/security;
            include /etc/nginx/snippets/security-headers.conf;
            include /etc/nginx/snippets/0rtt-replay-protect.conf;
        }

        location / {
            include /etc/nginx/snippets/0rtt-replay-protect.conf;
            include /etc/nginx/snippets/global-proxy-headers.conf;
            include /etc/nginx/snippets/realip-headers.conf;
            proxy_pass https://doh;
            proxy_ssl_verify_depth 1;
            proxy_ssl_trusted_certificate /etc/nginx/ag.cer;
            proxy_ssl_name adguardintsrv;

            include /etc/nginx/snippets/headers-adguard.conf;
            include /etc/nginx/snippets/basicauth.conf;
        }

        include /etc/nginx/snippets/headers-adguard.conf;
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        listen 443 http3;
        listen [::]:443 http3;
        server_name mta-sts.glassrom.org mta-sts.glassrom.pw;

        root /srv/mta-sts;

        include snippets/security-headers.conf;

        location = /.well-known/mta-sts.txt {}

        location = /.well-known/security.txt {
            root /srv/security;
            include /etc/nginx/snippets/security-headers.conf;
        }

        location / {
            return 404;
        }
    }

    upstream jellyfin {
        server 10.68.10.145:8096;
        keepalive 256;
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        listen 443 http3;
        listen [::]:443 http3;
        server_name jellyfin.glassrom.org jellyfin.glassrom.pw;

        # Upstream recommended configuration. TODO: cleanup

        location / {
            if ($host = 'jellyfin.glassrom.pw') {
                return 308 https://jellyfin.glassrom.org$request_uri;
            }
            proxy_pass http://jellyfin;
            include /etc/nginx/snippets/0rtt-replay-protect.conf;
            include /etc/nginx/snippets/global-proxy-headers.conf;
            include /etc/nginx/snippets/realip-headers.conf;
            include /etc/nginx/snippets/websocket-proxy-headers.conf;

            # Disable buffering when the nginx proxy gets very resource heavy upon streaming
            include /etc/nginx/snippets/proxy-no-buffering.conf;

            include /etc/nginx/snippets/headers-jellyfin.conf;
        }
        # location block for /web - This is purely for aesthetics so /web/#!/ works instead of having to go to /web/index.html/#!/
        location = /web/ {

            if ($host = 'jellyfin.glassrom.pw') {
                return 308 https://jellyfin.glassrom.org$request_uri;
            }

            # Proxy main Jellyfin traffic
            proxy_pass http://jellyfin/web/index.html;
            include /etc/nginx/snippets/0rtt-replay-protect.conf;
            include /etc/nginx/snippets/global-proxy-headers.conf;
            include /etc/nginx/snippets/realip-headers.conf;
            include /etc/nginx/snippets/websocket-proxy-headers.conf;

            # Disable buffering when the nginx proxy gets very resource heavy upon streaming
            include /etc/nginx/snippets/proxy-no-buffering.conf;

            include /etc/nginx/snippets/headers-jellyfin.conf;
        }

        location ~* ^/Videos/(.*)/(?!live) {
            # Set size of a slice (this amount will be always requested from the backend by nginx)
            # Higher value means more latency, lower more overhead
            # This size is independent of the size clients/browsers can request
            slice 2m;

            proxy_cache jellyfin-videos;
            proxy_cache_valid 200 206 301 302 30d;
            proxy_ignore_headers Expires Cache-Control Set-Cookie X-Accel-Expires;
            proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
            proxy_connect_timeout 15s;
            proxy_set_header Connection "";
            # Transmit slice range to the backend
            proxy_set_header Range $slice_range;

            # This saves bandwidth between the proxy and jellyfin, as a file is only downloaded one time instead of multiple times when multiple clients want to at the same time
            # The first client will trigger the download, the other clients will have to wait until the slice is cached
            # Esp. practical during SyncPlay
            proxy_cache_lock on;
            proxy_cache_lock_age 60s;

            proxy_pass http://jellyfin;
            proxy_cache_key "jellyvideo$uri?MediaSourceId=$arg_MediaSourceId&VideoCodec=$arg_VideoCodec&AudioCodec=$arg_AudioCodec&AudioStreamIndex=$arg_AudioStreamIndex&VideoBitrate=$arg_VideoBitrate&AudioBitrate=$arg_AudioBitrate&SubtitleMethod=$arg_SubtitleMethod&TranscodingMaxAudioChannels=$arg_TranscodingMaxAudioChannels&RequireAvc=$arg_RequireAvc&SegmentContainer=$arg_SegmentContainer&MinSegments=$arg_MinSegments&BreakOnNonKeyFrames=$arg_BreakOnNonKeyFrames&h264-profile=$h264Profile&h264-level=$h264Level&slicerange=$slice_range";

            # add_header X-Cache-Status $upstream_cache_status; # This is only for debugging cache

            include /etc/nginx/snippets/0rtt-replay-protect.conf;
            include /etc/nginx/snippets/global-proxy-headers.conf;
            include /etc/nginx/snippets/realip-headers.conf;
            include /etc/nginx/snippets/websocket-proxy-headers.conf;
            include /etc/nginx/snippets/headers-jellyfin.conf;
        }

        location ~ /Items/(.*)/Images {
            proxy_pass http://jellyfin;
            include /etc/nginx/snippets/0rtt-replay-protect.conf;
            include /etc/nginx/snippets/global-proxy-headers.conf;
            include /etc/nginx/snippets/realip-headers.conf;
            include /etc/nginx/snippets/websocket-proxy-headers.conf;

            proxy_cache jellyfin;
            proxy_cache_revalidate on;
            proxy_cache_lock on;
            # add_header X-Cache-Status $upstream_cache_status; # This is only to check if cache is working

            include /etc/nginx/snippets/headers-jellyfin.conf;
        }

        location /socket {
            if ($host = 'jellyfin.glassrom.pw') {
                return 308 https://jellyfin.glassrom.org$request_uri;
            }
            # Proxy Jellyfin Websockets traffic
            proxy_pass http://jellyfin;
            include /etc/nginx/snippets/0rtt-replay-protect.conf;
            include /etc/nginx/snippets/global-proxy-headers.conf;
            include /etc/nginx/snippets/realip-headers.conf;
            include /etc/nginx/snippets/websocket-proxy-headers.conf;

            # Disable buffering when the nginx proxy gets very resource heavy upon streaming
            include /etc/nginx/snippets/proxy-no-buffering.conf;

            include /etc/nginx/snippets/headers-jellyfin.conf;
        }

        location = /.well-known/security.txt {
            root /srv/security;
            include /etc/nginx/snippets/security-headers.conf;
            include /etc/nginx/snippets/0rtt-replay-protect.conf;
        }

        include /etc/nginx/snippets/headers-jellyfin.conf;
    }

    upstream transmission {
        server 10.68.10.145:9091;
        keepalive 256;
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        listen 443 http3;
        listen [::]:443 http3;
        server_name tr.glassrom.org tr.glassrom.pw;

        location / {
            if ($host = 'tr.glassrom.pw') {
                return 308 https://tr.glassrom.org$request_uri;
            }
            proxy_pass http://transmission;
            include /etc/nginx/snippets/0rtt-replay-protect.conf;
            include /etc/nginx/snippets/global-proxy-headers.conf;
            include /etc/nginx/snippets/realip-headers.conf;
            include /etc/nginx/snippets/transmission-headers.conf;
            include /etc/nginx/snippets/headers-tr.conf;
        }

        location ^~ /transmission {
            if ($host = 'tr.glassrom.pw') {
                return 308 https://tr.glassrom.org$request_uri;
            }
            proxy_pass http://transmission;
            include /etc/nginx/snippets/0rtt-replay-protect.conf;
            include /etc/nginx/snippets/global-proxy-headers.conf;
            include /etc/nginx/snippets/realip-headers.conf;
            include /etc/nginx/snippets/transmission-headers.conf;
            include /etc/nginx/snippets/headers-tr.conf;
        }

        location /transmission/rpc {
            if ($host = 'tr.glassrom.pw') {
                return 308 https://tr.glassrom.org$request_uri;
            }
            proxy_pass http://transmission;
            include /etc/nginx/snippets/0rtt-replay-protect.conf;
            include /etc/nginx/snippets/global-proxy-headers.conf;
            include /etc/nginx/snippets/realip-headers.conf;
            include /etc/nginx/snippets/transmission-headers.conf;
            include /etc/nginx/snippets/headers-tr.conf;
        }

        location /transmission/web/ {
            if ($host = 'tr.glassrom.pw') {
                return 308 https://tr.glassrom.org$request_uri;
            }
            proxy_pass http://transmission;
            include /etc/nginx/snippets/0rtt-replay-protect.conf;
            include /etc/nginx/snippets/global-proxy-headers.conf;
            include /etc/nginx/snippets/realip-headers.conf;
            include /etc/nginx/snippets/transmission-headers.conf;
            include /etc/nginx/snippets/headers-tr.conf;
        }

        location /transmission/upload {
            if ($host = 'tr.glassrom.pw') {
                return 308 https://tr.glassrom.org$request_uri;
            }
            proxy_pass http://transmission;
            include /etc/nginx/snippets/0rtt-replay-protect.conf;
            include /etc/nginx/snippets/global-proxy-headers.conf;
            include /etc/nginx/snippets/realip-headers.conf;
            include /etc/nginx/snippets/transmission-headers.conf;
            include /etc/nginx/snippets/headers-tr.conf;
        }

        location = /.well-known/security.txt {
            root /srv/security;
            include /etc/nginx/snippets/security-headers.conf;
            include /etc/nginx/snippets/0rtt-replay-protect.conf;
        }

        include /etc/nginx/snippets/headers-tr.conf;
    }


    upstream plex {
        server 10.68.10.145:32400;
        keepalive 256;
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        listen 443 http3;
        listen [::]:443 http3;
        server_name plex.glassrom.org plex.glassrom.pw;

        proxy_ssl_verify_depth 1;
        proxy_ssl_trusted_certificate /etc/nginx/plex.cer;
        proxy_ssl_name plex.glassrom.org;

        location / {
            if ($host = 'plex.glassrom.pw') {
                return 308 https://plex.glassrom.org$request_uri;
            }
            # if a request to / comes in, 307 redirect to the main plex page.
            # but only if it doesn't contain the X-Plex-Device-Name header
            if ($http_x_plex_device_name = '') {
                rewrite ^/$ https://plex.glassrom.org/web/index.html;
            }
            proxy_pass http://plex;
            include /etc/nginx/snippets/0rtt-replay-protect.conf;
            include /etc/nginx/snippets/global-proxy-headers.conf;
            include /etc/nginx/snippets/realip-headers.conf;
            include /etc/nginx/snippets/websocket-proxy-headers.conf;

            # Disable buffering when the nginx proxy gets very resource heavy upon streaming
            include /etc/nginx/snippets/proxy-no-buffering.conf;

            include /etc/nginx/snippets/headers-plex.conf;
        }

        location = /.well-known/security.txt {
            root /srv/security;
            include /etc/nginx/snippets/security-headers.conf;
            include /etc/nginx/snippets/0rtt-replay-protect.conf;
        }

        include /etc/nginx/snippets/headers-plex.conf;
    }
}

stream {
    ssl_protocols TLSv1.3 TLSv1.2;
    ssl_ciphers ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256;
    ssl_prefer_server_ciphers on;
#    ssl_conf_command Options PrioritizeChaCha;
#    ssl_conf_command Ciphersuites TLS_CHACHA20_POLY1305_SHA256:TLS_AES_256_GCM_SHA384:TLS_AES_128_GCM_SHA256;
    ssl_ecdh_curve x25519:P-521:P-384:P-256;

    ssl_certificate /etc/letsencrypt/live/glassrom.pw/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/glassrom.pw/privkey.pem;

    ssl_session_cache shared:streamSSL:60m;
    ssl_session_timeout 1d;

    # maintained by nginx-rotate-session-ticket-keys in ramfs
    ssl_session_ticket_key session-ticket-keys/4.key;
    ssl_session_ticket_key session-ticket-keys/3.key;
    ssl_session_ticket_key session-ticket-keys/2.key;
    ssl_session_ticket_key session-ticket-keys/1.key;

#    ssl_conf_command Options KTLS;

    ssl_trusted_certificate /etc/letsencrypt/live/glassrom.pw/chain.pem;

    server {
        listen 853 ssl;
        listen [::]:853 ssl;
        listen 853 quic;
        listen [::]:853 quic;
        proxy_pass [::1]:8003;
    }

#    server {
#        listen 8082;
#        listen [::]:8082;
#        proxy_pass 10.0.0.2:22;
#    }

    #    upstream transmission {
        #        server 10.68.10.145:9091;
        #    }

    #    server {
        #        listen 9091 ssl;
        #        listen [::]:9091 ssl;
        #        proxy_pass transmission;
        #    }
}
